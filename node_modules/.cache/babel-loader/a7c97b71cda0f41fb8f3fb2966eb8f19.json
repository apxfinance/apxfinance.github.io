{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/components/Nav/AccountButton.tsx\";\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useWallet } from 'use-wallet';\nimport styled from 'styled-components';\nimport useModal from '../../hooks/useModal';\nimport WalletProviderModal from '../WalletProviderModal';\nimport AccountModal from './AccountModal';\nconst CustomBtn = styled(Button)`\n    border-radius: 12px!important;\n    border-color: #1FE7ABFF !important;\n    color: #fff !important;\n    margin: 5px 5px !important;\n    padding: 12px !important;\n    min-width: 100% !important;\n    height: 45px;\n    font-size: 14px !important;\n    &:hover {\n      background-color: #5337c4 !important;\n    }\n  `;\n\nconst AccountButton = ({\n  text\n}) => {\n  const {\n    account\n  } = useWallet();\n  const accountEllipsis = account ? account.substring(0, 4) + \"...\" + account.substring(account.length - 4) : null;\n  const [onPresentAccountModal] = useModal( /*#__PURE__*/React.createElement(AccountModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 44\n    }\n  }));\n  const [isWalletProviderOpen, setWalletProviderOpen] = useState(false);\n\n  const handleWalletProviderOpen = () => {\n    setWalletProviderOpen(true);\n  };\n\n  const handleWalletProviderClose = () => {\n    setWalletProviderOpen(false);\n  };\n\n  const buttonText = text ? text : 'Connect Wallet';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, !account ? /*#__PURE__*/React.createElement(CustomBtn, {\n    onClick: handleWalletProviderOpen,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#fff',\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, buttonText)) : /*#__PURE__*/React.createElement(CustomBtn, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: onPresentAccountModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#fff',\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 56\n    }\n  }, accountEllipsis))), /*#__PURE__*/React.createElement(WalletProviderModal, {\n    open: isWalletProviderOpen,\n    handleClose: handleWalletProviderClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AccountButton;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/components/Nav/AccountButton.tsx"],"names":["React","useState","Button","useWallet","styled","useModal","WalletProviderModal","AccountModal","CustomBtn","AccountButton","text","account","accountEllipsis","substring","length","onPresentAccountModal","isWalletProviderOpen","setWalletProviderOpen","handleWalletProviderOpen","handleWalletProviderClose","buttonText","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAMA,MAAMC,SAAS,GAAGJ,MAAM,CAACF,MAAD,CAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAZA;;AAcA,MAAMO,aAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAMS,eAAe,GAAGD,OAAO,GAAGA,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,IAA0B,KAA1B,GAAkCF,OAAO,CAACE,SAAR,CAAkBF,OAAO,CAACG,MAAR,GAAiB,CAAnC,CAArC,GAA6E,IAA5G;AACA,QAAM,CAACC,qBAAD,IAA0BV,QAAQ,eAAC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,CAAxC;AAEA,QAAM,CAACW,oBAAD,EAAuBC,qBAAvB,IAAgDhB,QAAQ,CAAC,KAAD,CAA9D;;AAEA,QAAMiB,wBAAwB,GAAG,MAAM;AACrCD,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,QAAME,yBAAyB,GAAG,MAAM;AACtCF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAFD;;AAIA,QAAMG,UAAU,GAAGV,IAAI,GAAGA,IAAH,GAAU,gBAAjC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,OAAD,gBACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEO,wBAApB;AAA8C,IAAA,KAAK,EAAC,SAApD;AAA8D,IAAA,OAAO,EAAC,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAE,MAAR;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CF,UAA/C,CADF,CADD,gBAKC,oBAAC,SAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAC,WAApC;AAAgD,IAAA,OAAO,EAAEL,qBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,eAAJ,CAA7C,CADF,CANJ,eAWE,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAEI,oBAA3B;AAAiD,IAAA,WAAW,EAAEG,yBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAgBD,CAjCD;;AAmCA,eAAeV,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useWallet } from 'use-wallet';\nimport styled from 'styled-components';\nimport useModal from '../../hooks/useModal';\nimport WalletProviderModal from '../WalletProviderModal';\nimport AccountModal from './AccountModal';\n\ninterface AccountButtonProps {\n  text?: string;\n}\n\nconst CustomBtn = styled(Button)`\n    border-radius: 12px!important;\n    border-color: #1FE7ABFF !important;\n    color: #fff !important;\n    margin: 5px 5px !important;\n    padding: 12px !important;\n    min-width: 100% !important;\n    height: 45px;\n    font-size: 14px !important;\n    &:hover {\n      background-color: #5337c4 !important;\n    }\n  `;\n\nconst AccountButton: React.FC<AccountButtonProps> = ({ text }) => {\n  const { account } = useWallet();\n  const accountEllipsis = account ? account.substring(0, 4) + \"...\" + account.substring(account.length - 4) : null;\n  const [onPresentAccountModal] = useModal(<AccountModal />);\n\n  const [isWalletProviderOpen, setWalletProviderOpen] = useState(false);\n\n  const handleWalletProviderOpen = () => {\n    setWalletProviderOpen(true);\n  };\n\n  const handleWalletProviderClose = () => {\n    setWalletProviderOpen(false);\n  };\n\n  const buttonText = text ? text : 'Connect Wallet';\n\n  return (\n    <div>\n      {!account ? (\n        <CustomBtn onClick={handleWalletProviderOpen} color=\"primary\" variant=\"contained\">\n          <p style={{color: '#fff',  fontSize: '14px'}}>{buttonText}</p>\n        </CustomBtn>\n      ) : (\n        <CustomBtn  color=\"primary\" variant=\"contained\" onClick={onPresentAccountModal}>\n          <p style={{color: '#fff', fontSize: '14px'}}><b>{accountEllipsis}</b></p>\n        </CustomBtn>\n      )}\n\n      <WalletProviderModal open={isWalletProviderOpen} handleClose={handleWalletProviderClose} />\n      {/* <AccountModal open={isAccountModalOpen} handleClose={handleAccountModalClose}/> */}\n    </div>\n  );\n};\n\nexport default AccountButton;\n"]},"metadata":{},"sourceType":"module"}