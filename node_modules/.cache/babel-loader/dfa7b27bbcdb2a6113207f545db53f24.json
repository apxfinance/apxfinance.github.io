{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Bank/Bank.tsx\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport useTombFinance from '../../hooks/useTombFinance';\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px'\n    }\n  }\n}));\n\nconst Bank = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const {\n    bankId\n  } = useParams();\n  const bank = useBank(bankId);\n  const {\n    account\n  } = useWallet();\n  const {\n    onRedeem\n  } = useRedeem(bank);\n  const statsOnPool = useStatsForPool(bank);\n  return account && bank ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#fff',\n      paddingLeft: '15px'\n    },\n    align: \"center\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, `Deposit ${bank === null || bank === void 0 ? void 0 : bank.depositTokenName} and earn ${bank === null || bank === void 0 ? void 0 : bank.earnTokenName}`), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    style: {\n      color: '#fff !important',\n      fontSize: '14px',\n      paddingLeft: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Earn rewards by providing liquidity to our protocol.\"), /*#__PURE__*/React.createElement(Box, {\n    pt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginTop: '5px',\n      color: '#fff !important'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"APR\"), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, bank.closedForStaking ? '0.00' : statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.yearlyAPR, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginTop: '5px',\n      color: '#fff !important'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Daily APR\"), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, bank.closedForStaking ? '0.00' : statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.dailyAPR, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginTop: '5px',\n      color: '#fff !important'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"TVL\"), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"$\", statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.TVL)))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledBank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Harvest, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stake, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), bank.depositTokenName.includes('LP') && /*#__PURE__*/React.createElement(LPTokenHelpText, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRedeem,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Claim & Withdraw\"))))) : !bank ? /*#__PURE__*/React.createElement(BankNotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  });\n};\n\nconst LPTokenHelpText = ({\n  bank\n}) => {\n  const tombFinance = useTombFinance();\n  const tombAddr = tombFinance.APEX.address;\n  const tshareAddr = tombFinance.ASHARE.address;\n  let pairName;\n  let uniswapUrl;\n\n  if (bank.depositTokenName.includes('APEX')) {\n    pairName = 'APEX-FTM pair';\n    uniswapUrl = 'https://spookyswap.finance/add/FTM/' + tombAddr;\n  } else {\n    pairName = 'ASHARE-FTM pair';\n    uniswapUrl = 'https://spookyswap.finance/add/FTM/' + tshareAddr;\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    lg: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    href: uniswapUrl,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, `Provide liquidity for ${pairName} on SpookySwap`));\n};\n\nconst BankNotFound = () => {\n  return /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: \"\\uD83C\\uDFDA\",\n    title: \"Not Found\",\n    subtitle: \"You've hit a bank just robbed by unicorns.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledLink = styled.a`\n  text-decoration: underline;\n  color: #6f4ef2 !important;\n  font-weight: 400 !important;\n  font-size: 15px !important;\n  background-color: #141127 !important;\n  border-color: #141127 !important;\n`;\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\nexport default Bank;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Bank/Bank.tsx"],"names":["React","useEffect","styled","useParams","useWallet","makeStyles","Box","Button","Card","CardContent","Typography","Grid","PageHeader","Spacer","UnlockWallet","Harvest","Stake","useBank","useStatsForPool","useRedeem","useTombFinance","useStyles","theme","gridItem","height","breakpoints","up","Bank","window","scrollTo","classes","bankId","bank","account","onRedeem","statsOnPool","color","paddingLeft","depositTokenName","earnTokenName","fontSize","marginBottom","textAlign","marginTop","fontWeight","closedForStaking","yearlyAPR","dailyAPR","TVL","includes","LPTokenHelpText","tombFinance","tombAddr","APEX","address","tshareAddr","ASHARE","pairName","uniswapUrl","BankNotFound","StyledBank","div","StyledLink","a","StyledCardsWrapper","StyledCardWrapper","Center"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {Box, Button, Card, CardContent, Typography, Grid, Container} from '@material-ui/core';\n\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport { Bank as BankEntity } from '../../tomb-finance';\nimport useTombFinance from '../../hooks/useTombFinance';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Bank: React.FC = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const { bankId } = useParams();\n  const bank = useBank(bankId);\n\n  const { account } = useWallet();\n  const { onRedeem } = useRedeem(bank);\n  const statsOnPool = useStatsForPool(bank);\n  return account && bank ? (\n    <>\n\n        <Typography style={{color:'#fff', paddingLeft: '15px'}} align=\"center\" variant=\"h5\">\n          {`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\n        </Typography>\n        <Typography align=\"center\" style={{color:'#fff !important', fontSize: '14px',paddingLeft: '15px'}}>Earn rewards by providing liquidity to our protocol.</Typography>\n\n      <Box pt={4}>\n        <Grid container justify=\"center\" spacing={3} style={{ marginBottom: '20px' }}>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography style={{marginTop: '5px', color:'#fff !important'}}>APR</Typography>\n                <Typography style={{fontWeight: 'bold'}}>{bank.closedForStaking ? '0.00' : statsOnPool?.yearlyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography style={{marginTop: '5px', color:'#fff !important'}}>Daily APR</Typography>\n                <Typography style={{fontWeight: 'bold'}}>{bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography style={{marginTop: '5px', color:'#fff !important'}}>TVL</Typography>\n                <Typography style={{fontWeight: 'bold'}}>${statsOnPool?.TVL}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n      <Box mt={5}>\n        <StyledBank>\n          <StyledCardsWrapper>\n            <StyledCardWrapper>\n              <Harvest bank={bank} />\n            </StyledCardWrapper>\n            <Spacer />\n            <StyledCardWrapper>{<Stake bank={bank} />}</StyledCardWrapper>\n          </StyledCardsWrapper>\n          <Spacer size=\"lg\" />\n          {bank.depositTokenName.includes('LP') && <LPTokenHelpText bank={bank} />}\n          <Spacer size=\"lg\" />\n          <div>\n            <Button onClick={onRedeem} color=\"primary\" variant=\"contained\">\n              Claim & Withdraw\n            </Button>\n          </div>\n        </StyledBank>\n      </Box>\n    </>\n  ) : !bank ? (\n    <BankNotFound />\n  ) : (\n    <UnlockWallet />\n  );\n};\n\nconst LPTokenHelpText: React.FC<{ bank: BankEntity }> = ({ bank }) => {\n  const tombFinance = useTombFinance();\n  const tombAddr = tombFinance.APEX.address;\n  const tshareAddr = tombFinance.ASHARE.address;\n\n  let pairName: string;\n  let uniswapUrl: string;\n  if (bank.depositTokenName.includes('APEX')) {\n    pairName = 'APEX-FTM pair';\n    uniswapUrl = 'https://spookyswap.finance/add/FTM/' + tombAddr;\n  } else {\n    pairName = 'ASHARE-FTM pair';\n    uniswapUrl = 'https://spookyswap.finance/add/FTM/' + tshareAddr;\n  }\n  return (\n          <Grid item xs={12} md={8} lg={8}>\n        <StyledLink href={uniswapUrl} target=\"_blank\">\n          {`Provide liquidity for ${pairName} on SpookySwap`}\n        </StyledLink>\n          </Grid>\n  );\n};\n\nconst BankNotFound = () => {\n  return (\n    <Center>\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"You've hit a bank just robbed by unicorns.\" />\n    </Center>\n  );\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledLink = styled.a`\n  text-decoration: underline;\n  color: #6f4ef2 !important;\n  font-weight: 400 !important;\n  font-size: 15px !important;\n  background-color: #141127 !important;\n  border-color: #141127 !important;\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Bank;\n"]},"metadata":{},"sourceType":"module"}