{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Boardroom/components/ClaimModal.tsx\";\nimport React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport Modal from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\n\nconst ClaimModal = ({\n  onConfirm,\n  onDismiss\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: `Claim Rewards`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      'textAlign': 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"You are about to claim your APEX rewards. However, please understand that the printer only runs when APEX is above peg. Selling any APEX rewards right now might cause the protocol to stop paying out any further rewards. To support the Apex protocol we advice you not to sell your APEX just yet (at Spooky Swap) and wait for a more healthy TWAP value.\"), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => onConfirm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Confirm\")));\n};\n\nexport default ClaimModal;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Boardroom/components/ClaimModal.tsx"],"names":["React","Button","Typography","Modal","ModalActions","ModalTitle","ClaimModal","onConfirm","onDismiss"],"mappings":";AAAA,OAAOA,KAAP,MAAsD,OAAtD;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,KAAP,MAAkC,2BAAlC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAMA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAE1E,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAG,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAC,mBAAa;AAAd,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sWAFF,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAC,WAAhC;AAA4C,IAAA,OAAO,EAAE,MAAMD,SAAS,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CARF,CADF;AAkBD,CApBD;;AAsBA,eAAeD,UAAf","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\n\nimport { Button, Typography } from '@material-ui/core';\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\n\ninterface ClaimModalProps extends ModalProps {\n  onConfirm: () => void;\n}\n\nconst ClaimModal: React.FC<ClaimModalProps> = ({ onConfirm, onDismiss }) => {\n\n  return (\n    <Modal>\n      <ModalTitle text={`Claim Rewards`} />\n      <Typography style={{'textAlign': 'center'}}>\n        You are about to claim your APEX rewards. \n        However, please understand that the printer only runs when APEX is above peg. \n        Selling any APEX rewards right now might cause the protocol to stop paying out any further rewards. \n        To support the Apex protocol we advice you not to sell your APEX just yet (at Spooky Swap) and wait for a more healthy TWAP value.\n      </Typography>\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm()}>\n          Confirm\n        </Button>\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default ClaimModal;\n"]},"metadata":{},"sourceType":"module"}