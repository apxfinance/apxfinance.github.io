{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Boardroom/components/Harvest.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport useModal from '../../../hooks/useModal';\nimport useClaimRewardTimerMasonry from '../../../hooks/masonry/useClaimRewardTimerMasonry';\nimport useClaimRewardCheck from '../../../hooks/masonry/useClaimRewardCheck';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport ClaimModal from './../components/ClaimModal';\nimport useHarvestFromMasonry from '../../../hooks/useHarvestFromMasonry';\nimport useEarningsOnMasonry from '../../../hooks/useEarningsOnMasonry';\nimport useTombStats from '../../../hooks/useTombStats';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nconst Harvest = () => {\n  const tombStats = useTombStats();\n  const {\n    onReward\n  } = useHarvestFromMasonry();\n  const earnings = useEarningsOnMasonry();\n  const canClaimReward = useClaimRewardCheck();\n  const tokenPriceInDollars = useMemo(() => tombStats ? Number(tombStats.priceInDollars).toFixed(2) : null, [tombStats]);\n  const [onRewardAction, onDismissAction] = useModal( /*#__PURE__*/React.createElement(ClaimModal, {\n    onConfirm: () => {\n      onReward();\n      onDismissAction();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n  const {\n    from,\n    to\n  } = useClaimRewardTimerMasonry();\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      minHeight: '100% !important'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: \"APEX\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(earnings),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `â‰ˆ $${earnedInDollars}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: \"APEX Earned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRewardAction,\n    color: \"primary\",\n    variant: \"contained\",\n    disabled: earnings.eq(0) || !canClaimReward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Claim Reward\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    style: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, canClaimReward ? '' : /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Claim possible in\"), /*#__PURE__*/React.createElement(ProgressCountdown, {\n    hideBar: true,\n    base: from,\n    deadline: to,\n    description: \"Claim available in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[6]}px;\n  width: 100%;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Harvest;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Boardroom/components/Harvest.tsx"],"names":["React","useMemo","styled","Box","Button","Card","CardContent","Typography","TokenSymbol","Label","Value","useModal","useClaimRewardTimerMasonry","useClaimRewardCheck","ProgressCountdown","ClaimModal","useHarvestFromMasonry","useEarningsOnMasonry","useTombStats","getDisplayBalance","Harvest","tombStats","onReward","earnings","canClaimReward","tokenPriceInDollars","Number","priceInDollars","toFixed","onRewardAction","onDismissAction","earnedInDollars","from","to","minHeight","eq","color","textAlign","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledCardContentInner"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useModal from '../../../hooks/useModal';\nimport useClaimRewardTimerMasonry from '../../../hooks/masonry/useClaimRewardTimerMasonry';\nimport useClaimRewardCheck from '../../../hooks/masonry/useClaimRewardCheck';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport ClaimModal from './../components/ClaimModal';\nimport useHarvestFromMasonry from '../../../hooks/useHarvestFromMasonry';\nimport useEarningsOnMasonry from '../../../hooks/useEarningsOnMasonry';\nimport useTombStats from '../../../hooks/useTombStats';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nconst Harvest: React.FC = () => {\n  const tombStats = useTombStats();\n  const { onReward } = useHarvestFromMasonry();\n  const earnings = useEarningsOnMasonry();\n  const canClaimReward = useClaimRewardCheck();\n\n  const tokenPriceInDollars = useMemo(\n    () => (tombStats ? Number(tombStats.priceInDollars).toFixed(2) : null),\n    [tombStats],\n  );\n\n  const [onRewardAction, onDismissAction] = useModal(\n    <ClaimModal\n      onConfirm={() => {\n        onReward();\n        onDismissAction();\n      }}\n    />,\n  );\n\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n\n  const { from, to } = useClaimRewardTimerMasonry();\n\n  return (\n    <Box>\n      <Card style={{minHeight:'100% !important'}}>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n\n                <TokenSymbol symbol=\"APEX\" />\n              <Value value={getDisplayBalance(earnings)} />\n              <Label text={`â‰ˆ $${earnedInDollars}`} />\n              <Label text=\"APEX Earned\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              <Button\n                onClick={onRewardAction}\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={earnings.eq(0) || !canClaimReward}\n              >\n                Claim Reward\n              </Button>\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{ color: '#FFF' }}>\n        {canClaimReward ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{ textAlign: 'center' }}>Claim possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Claim available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n"]},"metadata":{},"sourceType":"module"}