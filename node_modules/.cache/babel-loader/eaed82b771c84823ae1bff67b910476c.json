{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Bonds/components/ExchangeModal.tsx\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport Button from '../../../components/Button';\nimport Modal from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport Label from '../../../components/Label';\n\nconst ExchangeModal = ({\n  max,\n  title,\n  description,\n  onConfirm,\n  onDismiss,\n  action,\n  tokenName\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\n  const handleChange = useCallback(e => setVal(e.currentTarget.value), [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TokenInput, {\n    value: val,\n    onSelectMax: handleSelectMax,\n    onChange: handleChange,\n    max: fullBalance,\n    symbol: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    text: action,\n    onClick: () => onConfirm(val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ExchangeModal;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Bonds/components/ExchangeModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","ModalTitle","TokenInput","getFullDisplayBalance","Label","ExchangeModal","max","title","description","onConfirm","onDismiss","action","tokenName","val","setVal","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkC,2BAAlC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;;AAWA,MAAMC,aAA2C,GAAG,CAAC;AACnDC,EAAAA,GADmD;AAEnDC,EAAAA,KAFmD;AAGnDC,EAAAA,WAHmD;AAInDC,EAAAA,SAJmD;AAKnDC,EAAAA,SALmD;AAMnDC,EAAAA,MANmD;AAOnDC,EAAAA;AAPmD,CAAD,KAQ9C;AACJ,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMkB,WAAW,GAAGnB,OAAO,CAAC,MAAMO,qBAAqB,CAACG,GAAD,CAA5B,EAAmC,CAACA,GAAD,CAAnC,CAA3B;AAEA,QAAMU,YAAY,GAAGrB,WAAW,CAAEsB,CAAD,IAA0CH,MAAM,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAjD,EAA0E,CAACL,MAAD,CAA1E,CAAhC;AAEA,QAAMM,eAAe,GAAGzB,WAAW,CAAC,MAAM;AACxCmB,IAAAA,MAAM,CAACC,WAAD,CAAN;AACD,GAFkC,EAEhC,CAACA,WAAD,EAAcD,MAAd,CAFgC,CAAnC;AAIA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEP,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEM,GADT;AAEE,IAAA,WAAW,EAAEO,eAFf;AAGE,IAAA,QAAQ,EAAEJ,YAHZ;AAIE,IAAA,GAAG,EAAED,WAJP;AAKE,IAAA,MAAM,EAAEH,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEJ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAC,WAAhC;AAA4C,IAAA,OAAO,EAAEE,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAC,WAAhC;AAA4C,IAAA,IAAI,EAAEC,MAAlD;AAA0D,IAAA,OAAO,EAAE,MAAMF,SAAS,CAACI,GAAD,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CADF;AAiBD,CAnCD;;AAqCA,eAAeR,aAAf","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport Button from '../../../components/Button';\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { BigNumber } from 'ethers';\nimport Label from '../../../components/Label';\n\ninterface ExchangeModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  title: string;\n  description: string;\n  action: string;\n  tokenName: string;\n}\n\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\n  max,\n  title,\n  description,\n  onConfirm,\n  onDismiss,\n  action,\n  tokenName,\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={title} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <Label text={description} />\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={onDismiss} />\n        <Button color=\"primary\" variant=\"contained\" text={action} onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default ExchangeModal;\n"]},"metadata":{},"sourceType":"module"}