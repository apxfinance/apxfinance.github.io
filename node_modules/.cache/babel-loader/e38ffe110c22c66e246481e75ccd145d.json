{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Bonds/Bonds.tsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\nimport { Typography } from \"@material-ui/core\";\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background-size: cover !important;\n    background-color: #181821;\n  }\n`;\n\nconst Bonds = () => {\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    account\n  } = useWallet();\n  const tombFinance = useTombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n  const bondBalance = useTokenBalance(tombFinance === null || tombFinance === void 0 ? void 0 : tombFinance.ABOND);\n  const handleBuyBonds = useCallback(async amount => {\n    const tx = await tombFinance.buyBonds(amount);\n    addTransaction(tx, {\n      summary: `Buy ${Number(amount).toFixed(2)} ABOND with ${amount} APEX`\n    });\n  }, [tombFinance, addTransaction]);\n  const handleRedeemBonds = useCallback(async amount => {\n    const tx = await tombFinance.redeemBonds(amount);\n    addTransaction(tx, {\n      summary: `Redeem ${amount} ABOND`\n    });\n  }, [tombFinance, addTransaction]);\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInFtm) < 1.01, [bondStat]);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animateme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"bg-bubbles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }))), !!account ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#fff'\n    },\n    align: \"left\",\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Buy & Redeem bonds\")), /*#__PURE__*/React.createElement(StyledBond, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Purchase\",\n    fromToken: tombFinance.APEX,\n    fromTokenName: \"APEX\",\n    toToken: tombFinance.ABOND,\n    toTokenName: \"ABOND\",\n    priceDesc: !isBondPurchasable ? 'APEX is over peg' : getDisplayBalance(bondsPurchasable, 18, 4) + ' ABOND available for purchase',\n    onExchange: handleBuyBonds,\n    disabled: !bondStat || isBondRedeemable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledStatsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"APEX\",\n    description: \"Last-Hour TWAP Price\",\n    price: getDisplayBalance(cashPrice, 18, 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"ABOND\",\n    description: \"Current Price: (APEX)^2\",\n    price: Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInFtm).toFixed(2) || '-',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Redeem\",\n    fromToken: tombFinance.ABOND,\n    fromTokenName: \"ABOND\",\n    toToken: tombFinance.APEX,\n    toTokenName: \"APEX\",\n    priceDesc: `${getDisplayBalance(bondBalance)} ABOND Available in wallet`,\n    onExchange: handleRedeemBonds,\n    disabled: !bondStat || bondBalance.eq(0) || !isBondRedeemable,\n    disabledDescription: !isBondRedeemable ? `Enabled when APEX > ${BOND_REDEEM_PRICE}FTM` : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })))) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\nexport default Bonds;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Bonds/Bonds.tsx"],"names":["React","useCallback","useMemo","Page","createGlobalStyle","Route","Switch","useRouteMatch","useWallet","UnlockWallet","ExchangeCard","styled","Spacer","useBondStats","useTombFinance","useCashPriceInLastTWAP","useTransactionAdder","ExchangeStat","useTokenBalance","useBondsPurchasable","getDisplayBalance","BOND_REDEEM_PRICE","BOND_REDEEM_PRICE_BN","Typography","BackgroundImage","Bonds","path","account","tombFinance","addTransaction","bondStat","cashPrice","bondsPurchasable","bondBalance","ABOND","handleBuyBonds","amount","tx","buyBonds","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","color","APEX","eq","StyledBond","div","StyledCardWrapper","StyledStatsWrapper"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/pit.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\nimport {Typography} from \"@material-ui/core\";\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background-size: cover !important;\n    background-color: #181821;\n  }\n`;\n\nconst Bonds: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { account } = useWallet();\n  const tombFinance = useTombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n\n  const bondBalance = useTokenBalance(tombFinance?.ABOND);\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.buyBonds(amount);\n      addTransaction(tx, {\n        summary: `Buy ${Number(amount).toFixed(2)} ABOND with ${amount} APEX`,\n      });\n    },\n    [tombFinance, addTransaction],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.redeemBonds(amount);\n      addTransaction(tx, { summary: `Redeem ${amount} ABOND` });\n    },\n    [tombFinance, addTransaction],\n  );\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n          <div className=\"animateme\">\n              <ul className=\"bg-bubbles\">\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n                  <li></li>\n              </ul>\n          </div>\n        {!!account ? (\n          <>\n            <Route exact path={path}>\n                <Typography style={{color:'#fff'}} align=\"left\" variant=\"h5\" gutterBottom>\n                    Buy & Redeem bonds\n                </Typography>            \n            </Route>\n            <StyledBond>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Purchase\"\n                  fromToken={tombFinance.APEX}\n                  fromTokenName=\"APEX\"\n                  toToken={tombFinance.ABOND}\n                  toTokenName=\"ABOND\"\n                  priceDesc={\n                    !isBondPurchasable\n                      ? 'APEX is over peg'\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' ABOND available for purchase'\n                  }\n                  onExchange={handleBuyBonds}\n                  disabled={!bondStat || isBondRedeemable}\n                />\n              </StyledCardWrapper>\n              <StyledStatsWrapper>\n                <ExchangeStat\n                  tokenName=\"APEX\"\n                  description=\"Last-Hour TWAP Price\"\n                  price={getDisplayBalance(cashPrice, 18, 4)}\n                />\n                <Spacer size=\"md\" />\n                <ExchangeStat\n                  tokenName=\"ABOND\"\n                  description=\"Current Price: (APEX)^2\" \n                  price={Number(bondStat?.tokenInFtm).toFixed(2) || '-'}\n                />\n              </StyledStatsWrapper>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Redeem\"\n                  fromToken={tombFinance.ABOND}\n                  fromTokenName=\"ABOND\"\n                  toToken={tombFinance.APEX}\n                  toTokenName=\"APEX\"\n                  priceDesc={`${getDisplayBalance(bondBalance)} ABOND Available in wallet`}\n                  onExchange={handleRedeemBonds}\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n                  disabledDescription={!isBondRedeemable ? `Enabled when APEX > ${BOND_REDEEM_PRICE}FTM` : null}\n                />\n              </StyledCardWrapper>\n            </StyledBond>\n          </>\n        ) : (\n          <UnlockWallet />\n        )}\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Bonds;\n"]},"metadata":{},"sourceType":"module"}