{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apxbckup/src/views/Boardroom/components/Stake.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core'; // import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\n\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdrawCheck from '../../../hooks/masonry/useWithdrawCheck';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useTombFinance from '../../../hooks/useTombFinance';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport useStakedBalanceOnMasonry from '../../../hooks/useStakedBalanceOnMasonry';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useUnstakeTimerMasonry from '../../../hooks/masonry/useUnstakeTimerMasonry';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToMasonry from '../../../hooks/useStakeToMasonry';\nimport useWithdrawFromMasonry from '../../../hooks/useWithdrawFromMasonry';\n\nconst Stake = () => {\n  const tombFinance = useTombFinance();\n  const [approveStatus, approve] = useApprove(tombFinance.ASHARE, tombFinance.contracts.Masonry.address);\n  const tokenBalance = useTokenBalance(tombFinance.ASHARE);\n  const stakedBalance = useStakedBalanceOnMasonry();\n  const {\n    from,\n    to\n  } = useUnstakeTimerMasonry();\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars('ASHARE', tombFinance.ASHARE);\n  const tokenPriceInDollars = useMemo(() => stakedTokenPriceInDollars ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString() : null, [stakedTokenPriceInDollars, stakedBalance]); // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const {\n    onStake\n  } = useStakeToMasonry();\n  const {\n    onWithdraw\n  } = useWithdrawFromMasonry();\n  const canWithdrawFromMasonry = useWithdrawCheck();\n  const [onPresentDeposit, onDismissDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: value => {\n      onStake(value);\n      onDismissDeposit();\n    },\n    tokenName: 'AShare',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }));\n  const [onPresentWithdraw, onDismissWithdraw] = useModal( /*#__PURE__*/React.createElement(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: value => {\n      onWithdraw(value);\n      onDismissWithdraw();\n    },\n    tokenName: 'AShare',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      minHeight: '100% !important'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: \"ASHARE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(stakedBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    color: \"#e3ddfc\",\n    text: `â‰ˆ $${tokenPriceInDollars}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    color: \"#e3ddfc\",\n    text: 'ASHARE Staked',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, approveStatus !== ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(Button, {\n    disabled: approveStatus !== ApprovalState.NOT_APPROVED,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginTop: '20px'\n    },\n    onClick: approve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Approve ASHARE\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    disabled: !canWithdrawFromMasonry,\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    style: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, canWithdrawFromMasonry ? '' : /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Withdraw possible in\"), /*#__PURE__*/React.createElement(ProgressCountdown, {\n    hideBar: true,\n    base: from,\n    deadline: to,\n    description: \"Withdraw available in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n    margin-top: ${props => props.theme.spacing[6]}px;\n\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Stake;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apxbckup/src/views/Boardroom/components/Stake.tsx"],"names":["React","useMemo","styled","Box","Button","Card","CardContent","Typography","AddIcon","RemoveIcon","IconButton","Label","Value","useApprove","ApprovalState","useModal","useTokenBalance","useWithdrawCheck","getDisplayBalance","DepositModal","WithdrawModal","useTombFinance","ProgressCountdown","useStakedBalanceOnMasonry","useStakedTokenPriceInDollars","useUnstakeTimerMasonry","TokenSymbol","useStakeToMasonry","useWithdrawFromMasonry","Stake","tombFinance","approveStatus","approve","ASHARE","contracts","Masonry","address","tokenBalance","stakedBalance","from","to","stakedTokenPriceInDollars","tokenPriceInDollars","Number","toFixed","toString","onStake","onWithdraw","canWithdrawFromMasonry","onPresentDeposit","onDismissDeposit","value","onPresentWithdraw","onDismissWithdraw","minHeight","APPROVED","NOT_APPROVED","marginTop","color","textAlign","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledActionSpacer","StyledCardContentInner"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdrawCheck from '../../../hooks/masonry/useWithdrawCheck';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useTombFinance from '../../../hooks/useTombFinance';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport useStakedBalanceOnMasonry from '../../../hooks/useStakedBalanceOnMasonry';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useUnstakeTimerMasonry from '../../../hooks/masonry/useUnstakeTimerMasonry';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToMasonry from '../../../hooks/useStakeToMasonry';\nimport useWithdrawFromMasonry from '../../../hooks/useWithdrawFromMasonry';\n\nconst Stake: React.FC = () => {\n  const tombFinance = useTombFinance();\n  const [approveStatus, approve] = useApprove(tombFinance.ASHARE, tombFinance.contracts.Masonry.address);\n\n  const tokenBalance = useTokenBalance(tombFinance.ASHARE);\n  const stakedBalance = useStakedBalanceOnMasonry();\n  const { from, to } = useUnstakeTimerMasonry();\n\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars('ASHARE', tombFinance.ASHARE);\n  const tokenPriceInDollars = useMemo(\n    () =>\n      stakedTokenPriceInDollars\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\n        : null,\n    [stakedTokenPriceInDollars, stakedBalance],\n  );\n  // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const { onStake } = useStakeToMasonry();\n  const { onWithdraw } = useWithdrawFromMasonry();\n  const canWithdrawFromMasonry = useWithdrawCheck();\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={(value) => {\n        onStake(value);\n        onDismissDeposit();\n      }}\n      tokenName={'AShare'}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={(value) => {\n        onWithdraw(value);\n        onDismissWithdraw();\n      }}\n      tokenName={'AShare'}\n    />,\n  );\n\n  return (\n    <Box>\n      <Card style={{minHeight:'100% !important'}}>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n                <TokenSymbol symbol=\"ASHARE\" />\n              <Value value={getDisplayBalance(stakedBalance)} />\n              <Label color='#e3ddfc' text={`â‰ˆ $${tokenPriceInDollars}`} />\n              <Label color='#e3ddfc' text={'ASHARE Staked'} />\n            </StyledCardHeader>\n            <StyledCardActions>\n              {approveStatus !== ApprovalState.APPROVED ? (\n                <Button\n                  disabled={approveStatus !== ApprovalState.NOT_APPROVED}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ marginTop: '20px' }}\n                  onClick={approve}\n                >\n                  Approve ASHARE\n                </Button>\n              ) : (\n                <>\n                  <IconButton disabled={!canWithdrawFromMasonry} onClick={onPresentWithdraw}>\n                    <RemoveIcon />\n                  </IconButton>\n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon />\n                  </IconButton>\n                </>\n              )}\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{ color: '#FFF' }}>\n        {canWithdrawFromMasonry ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{ textAlign: 'center' }}>Withdraw possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n    margin-top: ${(props) => props.theme.spacing[6]}px;\n\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}